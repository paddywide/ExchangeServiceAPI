// <auto-generated />
using System;
using ExchangeRate.Persistence.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExchangeRate.Persistence.Migrations
{
    [DbContext(typeof(ExchangeDatabaseContext))]
    [Migration("20241222050323_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ExchangeRate.Domain.Models.CurrencyCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CurrencyCode");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "AUD",
                            DateCreated = new DateTime(2024, 12, 22, 16, 3, 23, 514, DateTimeKind.Local).AddTicks(6237),
                            DateModified = new DateTime(2024, 12, 22, 16, 3, 23, 516, DateTimeKind.Local).AddTicks(7336)
                        },
                        new
                        {
                            Id = 2,
                            Code = "USD",
                            DateCreated = new DateTime(2024, 12, 22, 16, 3, 23, 516, DateTimeKind.Local).AddTicks(7549),
                            DateModified = new DateTime(2024, 12, 22, 16, 3, 23, 516, DateTimeKind.Local).AddTicks(7554)
                        });
                });

            modelBuilder.Entity("ExchangeRate.Domain.Models.QueryHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateQueried")
                        .HasColumnType("TEXT");

                    b.Property<string>("InputCurrency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OutputCurrancy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Rate")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("QueryHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
